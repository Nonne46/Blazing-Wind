input {
  # jdbc {
  #   jdbc_driver_library => "/opt/postgresql-42.3.5.jar"
  #   jdbc_driver_class => "org.postgresql.Driver"
  #   jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
  #   jdbc_user => "${DB_USERNAME}"
	# 	jdbc_password => "${DB_PASSWORD}"
  #   statement => "SELECT * FROM topics"
  #   schedule => "* * * * *"
  #   type => "topics"
  # }
  jdbc {
    jdbc_driver_library => "/opt/postgresql-42.3.5.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
    jdbc_user => "${DB_USERNAME}"
		jdbc_password => "${DB_PASSWORD}"
    statement => "SELECT posts.id, posts.topic_id, users.username, topics.title, forums.name, forums.description, posts.text, posts.created_at FROM posts INNER JOIN topics ON posts.topic_id  = topics.id INNER JOIN users ON posts.user_id  = users.id INNER JOIN forums ON topics.forum_id = forums.id;"
    schedule => "* * * * *"
    type => "posts"
  }
  jdbc {
    jdbc_driver_library => "/opt/postgresql-42.3.5.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
    jdbc_user => "${DB_USERNAME}"
		jdbc_password => "${DB_PASSWORD}"
    statement => "select status_replies.status_id, statuses.text as status_text, status_replies.id as reply_id, users.username as reply_username, status_replies.text as reply_text FROM status_replies INNER JOIN statuses ON status_replies.status_id = statuses.id INNER JOIN users ON status_replies.user_id = users.id;"
    schedule => "* * * * *"
    type => "status_replies"
  }
  jdbc {
    jdbc_driver_library => "/opt/postgresql-42.3.5.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
    jdbc_user => "${DB_USERNAME}"
		jdbc_password => "${DB_PASSWORD}"
    statement => "select statuses.id, users.username, statuses.text, statuses.created_at FROM statuses INNER JOIN users ON statuses.user_id = users.id;"
    schedule => "* * * * *"
    type => "statuses"
  }
  jdbc {
    jdbc_driver_library => "/opt/postgresql-42.3.5.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
    jdbc_user => "${DB_USERNAME}"
		jdbc_password => "${DB_PASSWORD}"
    statement => "select * from users;"
    schedule => "* * * * *"
    type => "users"
  }
}

## Add your filters / logstash plugins configuration here

output {
	elasticsearch {
		index => "%{type}"
		hosts => "elasticsearch:9200"
    user => elastic
    password => elasticpass
    document_id => "%{id}"
	}
}